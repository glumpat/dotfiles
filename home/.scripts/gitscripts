#!/usr/bin/env bash

gqrb() {
  git set-upstream
  git fetch origin "$@" && git pull && git rebase "$@"
}

gbir() {
  git rebase -i --autosquash $(git merge-base --fork-point "$@" $(git rev-parse --abbrev-ref HEAD))
}

gfu() {
  git commit --amend --no-edit
}

gtag() {
  git tag --sort version:refname | tail -n 1
}

gptag() {
  latest_tag=$(git tag --sort version:refname | tail -n 1)
  git push origin "$latest_tag"
}

gdifft() {
  local latest_tag=$(git tag --sort version:refname | tail -n 1)
  local main=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
  git diff origin/$main $latest_tag
}

gdtag() {
  local latest_tag=$(git tag --sort version:refname | tail -n 1)
  git tag -d $latest_tag
}

gntag() {
  local latest_tag new_tag
  latest_tag=$(git tag --sort version:refname | tail -n 1)
  new_tag="v$(date +"%y.%m.%d")"
  if [[ "$latest_tag" == "$new_tag" ]]; then 
    new_tag=$(_increment_micro "$latest_tag")
  fi
  git tag "$new_tag"
  echo "$new_tag"
}

function _increment_micro() {
  local day micro delimiter array day_array
  delimiter=.
  array=($(echo "$1" | tr $delimiter '\n'))
  day=${array[3]}
  if [[ "$day" == *"_"* ]]; then
    day_array=($(echo "$day" | tr "_" '\n'))
    day=${day_array[1]}
    micro=${day_array[2]}
    ((micro+=1))
    day="${day}_${micro}"
  else
    micro="1"
    day="${day}_${micro}"
  fi
  array[3]="$day"
  echo "$(local IFS=$delimiter ; echo "${array[*]}")"
}
